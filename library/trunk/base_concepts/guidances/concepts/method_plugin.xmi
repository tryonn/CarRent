<?xml version="1.0" encoding="UTF-8"?>
<com.ibm.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:com.ibm.uma="http://www.ibm.com/uma/1.0.2/uma.ecore" xmi:id="_0LCr8BUFEdqrUt4zetC1gg" guid="_0LCr8BUFEdqrUt4zetC1gg" changeDate="2005-11-07T14:06:50.711-0800">
  <mainDescription>&lt;p&gt;
    Method Plugin conceptually represents a unit for configuration, modularization, extension, packaging, and deployment of
    method content and processes.&amp;nbsp; A Process Engineer shall design&amp;nbsp;Plugins and allocate content to these Plugins
    with requirements for extensibility, modularity, reuse, and maintainability in mind.
&lt;/p&gt;
&lt;p&gt;
    Plug-ins can directly contribute new content, replace existing content, or to cross-reference to any Content Element or
    Process within another Plug-in that it extends.&amp;nbsp; Similar to UML 2.0's 'package merge' mechanism transformation
    interpretations, interpreting these Method Plug-in mechanisms results into new extended Method Content and
    Processes.&amp;nbsp; For example, a J2EE Extensions Plugin for RUP might contain additional steps for Tasks identifying
    design elements, new Work Products extensions to existing Roles to be responsible for the new Work Products, additional
    relationships of existing Content Elements to new J2EE specific Guidance elements (such as Guidelines, White Papers,
    Checklists), additional Activities for a Delivery Process, new Capability Patterns, etc.&amp;nbsp; A Method Plug-in defines
    these extension using Variability Element relationships and interpretation of these leads to new Method Content and
    Processes.
&lt;/p&gt;</mainDescription>
</com.ibm.uma:ContentDescription>
